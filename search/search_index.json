{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Agin is a one-stop machine learning solution designed to streamline your ML workflows with easy-to-use utilities and a flexible structure.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Modular design for efficient machine learning workflows.</li> <li>Easy integration with existing Python projects.</li> <li>Simple and intuitive API.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>To install the package, use:</p> <pre><code>pip install agin\n</code></pre>"},{"location":"#components","title":"Components","text":"<p>For detailed information, see the following sections:</p> <ul> <li>Regression</li> <li>Utils</li> </ul>"},{"location":"regression/","title":"Regression","text":"<p>The <code>regression</code> module contains implementations of regression models. Currently, the package supports:</p> <ul> <li>Linear Regression</li> </ul>"},{"location":"regression/#linear-regression","title":"Linear Regression","text":"<p>The <code>LinearRegression</code> class provides methods to train a linear regression model, make predictions, and evaluate the model's performance. It can be imported directly from <code>agin</code> or from <code>agin.regression</code>.</p>"},{"location":"regression/#usage","title":"Usage","text":"<p>The <code>LinearRegression</code> class can be imported directly from the <code>agin</code> package or from the <code>agin.regression</code> module:</p> <pre><code>from agin import LinearRegression\n# or\nfrom agin.regression import LinearRegression\n</code></pre>"},{"location":"regression/#example","title":"Example","text":"<pre><code># Option 1: Importing directly from agin\nfrom agin import LinearRegression\n\n# Option 2: Importing from agin.regression\nfrom agin.regression import LinearRegression\n\n# Training data\nx_train = [1, 2, 3, 4, 5]\ny_train = [2, 4, 6, 8, 10]\n\n# Initialize the model\nmodel = LinearRegression()\n\n# Fit the model\nmodel.fit(x_train, y_train)\n\n# Predict using the model\nx_test = [0, 1, 2, 3, 4, 5]\ny_test = [1, 3, 5, 7, 9, 11]\n\ny_pred = model.predict(x_test)\n\nprint(\"Predictions:\", y_pred)\n\n# Evaluate the model metrics\nmse, r2 = model.metrics(y_pred, y_test)\nprint(\"Mean Squared Error:\", mse)\nprint(\"R2 Score:\", r2)\n</code></pre>"},{"location":"regression/#methods","title":"Methods","text":""},{"location":"regression/#fitx-y","title":"<code>fit(x, y)</code>","text":"<ul> <li>Trains the model based on the input data.</li> <li>Args: <code>x</code> (list), <code>y</code> (list)</li> <li>Returns: None</li> </ul>"},{"location":"regression/#predictx","title":"<code>predict(x)</code>","text":"<ul> <li>Predicts outputs for given input data.</li> <li>Args: <code>x</code> (list)</li> <li>Returns: List of predicted values</li> </ul>"},{"location":"regression/#metricsy_pred-y_test","title":"<code>metrics(y_pred, y_test)</code>","text":"<ul> <li>Calculates evaluation metrics like Mean Squared Error (MSE) and R\u00b2 Score.</li> <li>Args: <code>y_pred</code> (list), <code>y_test</code> (list)</li> <li>Returns: Tuple containing MSE and R\u00b2 Score.</li> </ul>"},{"location":"utils/","title":"Utils","text":"<p>The <code>utils</code> module provides utility classes and methods to enhance your project.</p>"},{"location":"utils/#health-class","title":"Health Class","text":"<p>The <code>Health</code> class helps ensure the package is functioning correctly by providing a simple health-check mechanism.</p>"},{"location":"utils/#methods","title":"Methods","text":""},{"location":"utils/#__init__statusgood","title":"<code>__init__(status=\"Good\")</code>","text":"<ul> <li>Initializes the <code>Health</code> class with a default status of \"Good\".</li> <li>Args: <code>status</code> (string)</li> </ul>"},{"location":"utils/#check_health","title":"<code>check_health()</code>","text":"<ul> <li>Returns the current health status.</li> <li>Args: None</li> <li>Returns: String representing the health status.</li> </ul>"},{"location":"utils/#example","title":"Example","text":"<pre><code>from agin import Health\n\n# Create a Health object\nhealth_check = Health(\"Excellent\")\n\n# Check the health status\nprint(health_check.check_health())  # Output: Health status: Excellent\n</code></pre>"}]}